// import { useState } from 'react';
import { useAppDispatch, useAppSelector } from '@/lib/store';
// import { loginUser } from '@/lib/features/auth/authSlice';
import {
    InputOTP,
    InputOTPGroup,
    InputOTPSlot,
} from "@/components/ui/input-otp";
import { setOTPCodeLogin, verify2MFASetup } from "@/lib/features/auth/authSlice";
import { REGEXP_ONLY_DIGITS } from 'input-otp';
import { useNavigate } from 'react-router-dom';
import { useLoading } from '@/hooks/useAppState';
import { API_ENDPOINTS } from '@/lib/api/config';
import { useEffect, useRef } from 'react';
const TwoFactorForm = () => {
    const dispatch = useAppDispatch();
    const navigate = useNavigate();
    const { email, session, tenantId } = useAppSelector(state => state.auth.login.formData);
    const { isLoading: isLoadingFor2FA } = useLoading(API_ENDPOINTS.auth.verify2MFASetup);
    const { totpCode } = useAppSelector((state) => state.auth.login);
    const inputRef = useRef<HTMLInputElement>(null);

    useEffect(() => {
        // focus on the first input if the totpCode is empty
        if (!totpCode?.length) {
            if (inputRef.current) {
                inputRef.current.focus();
            };
        };
    }, [totpCode]);


    const handleSubmit = (code: string) => {
        const callback = (mfaSessionExpired: boolean) => {
            if (mfaSessionExpired) {
                navigate('/login', { replace: true });
            } else {
                navigate('/discover', { replace: true });
            }
        };
        dispatch(verify2MFASetup({ payload: { email: email, totpCode: code, session: session || '', tenantId: tenantId || '' }, callback }));
    };

    const handleOTPChange = (otp: string) => {
        dispatch(setOTPCodeLogin(otp));
        if (otp.length === 6) {
            handleSubmit(otp);
        };
    };

    return (
        <>
            <div className="text-center">
                <h2 className="text-[36px] font-[600] text-neutral leading-10">2-Factor Authentication</h2>
                <p className="text-[13px] font-[400] text-[#5E5F6E] mt-2 leading-5">
                    One quick step for major security gains.
                </p>
            </div>
            <div className="mt-11 flex flex-col gap-4">
                <p className="text-[13px] font-[400] text-neutral leading-5">
                    Enter the 6-digit code generated by the third-party authenticator app below.
                </p>
                <InputOTP
                    ref={inputRef}
                    autoFocus
                    id={"otp-input"}
                    maxLength={6}
                    pattern={REGEXP_ONLY_DIGITS}
                    value={totpCode}
                    onChange={handleOTPChange}
                    disabled={totpCode?.length === 6 || isLoadingFor2FA}
                >
                    <InputOTPGroup className="flex-1">
                        <InputOTPSlot className="w-full text-[24px] text-neutral font-[400] sm:w-16.5 h-15 bg-[#FFFFFF] border-1 border-neutral-200 !outline-none" index={0} />
                    </InputOTPGroup>
                    <InputOTPGroup className="flex-1">
                        <InputOTPSlot className="w-full text-[24px] text-neutral font-[400] sm:w-16.5 h-15 bg-[#FFFFFF] border-1 border-neutral-200 !outline-none" index={1} />
                    </InputOTPGroup>
                    <InputOTPGroup className="flex-1">
                        <InputOTPSlot className="w-full text-[24px] text-neutral font-[400] sm:w-16.5 h-15 bg-[#FFFFFF] border-1 border-neutral-200 !outline-none" index={2} />
                    </InputOTPGroup>
                    <InputOTPGroup className="flex-1">
                        <InputOTPSlot className="w-full text-[24px] text-neutral font-[400] sm:w-16.5 h-15 bg-[#FFFFFF] border-1 border-neutral-200 !outline-none" index={3} />
                    </InputOTPGroup>
                    <InputOTPGroup className="flex-1">
                        <InputOTPSlot className="w-full text-[24px] text-neutral font-[400] sm:w-16.5 h-15 bg-[#FFFFFF] border-1 border-neutral-200 !outline-none" index={4} />
                    </InputOTPGroup>
                    <InputOTPGroup className="flex-1">
                        <InputOTPSlot className="w-full text-[24px] text-neutral font-[400] sm:w-16.5 h-15 bg-[#FFFFFF] border-1 border-neutral-200 !outline-none" index={5} />
                    </InputOTPGroup>
                </InputOTP>
            </div>
        </>
    );
};

export default TwoFactorForm; 